About
-----
Simpool is a simple object pooling library for Java.  There is some debate over
the use of object pooling for languages like Java, but I'll leave that up to
you.  I really just made this because I had an hour of free time and had a
programming itch to scratch.

Releases
--------
If you would just like to download the jar file, see the releases page:
http://finnkuusisto.github.com/Simpool/releases

License
-------
Simpool is licensed under the BSD 2-Clause license. A copy of the license can be
found in the header of every source file as well as in the LICENSE file included
with the Simpool.

Using Simpool
-------------
There are 3 classes you need to understand in order to use Simpool. Poolable is
an abstraction for the type that you want to pool.  PoolableFactory is an
abstraction for instantiation of the type that you want to pool.  Pool is type
that actually manages the pooling of objects.

-Poolable-
Any type that you want to pool must implement the Poolable interface.  It is a
minimal interface that only requires implementation of the reset() method, which
is called when an instance is returned to a Pool.

-PoolableFactory-
For any type that you want to pool you must also provide a class that implements
the PoolableFactory interface.  It is a minimal interface that only requires
implementation of the create() method, which is used by a Pool whenever another
instance of the pooled type must be created.

-Pool-
The Pool class manages the actual pooling of objects.  You construct one with a
PoolableFactory for the type you want to pool.  You can optionally specify a
starting size of the pool as well as a maximum number of allocations that the
Pool is allowed to make.

Javadocs
--------
See the Javadocs for more details:
http://finnkuusisto.github.com/Simpool/doc